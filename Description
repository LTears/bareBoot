./Library/BdsDxe/BdsEntry.c:    BootOption->BootCurrent = *mBootNext;
./Library/BdsDxe/BdsEntry.c:    if (!IS_LOAD_OPTION_TYPE (BootOption->Attribute, LOAD_OPTION_ACTIVE)) {
./Library/BdsDxe/BdsEntry.c:    if (DevicePathType (BootOption->DevicePath) != BBS_DEVICE_PATH) {
./Library/BdsDxe/BdsEntry.c:      BdsLibConnectDevicePath (BootOption->DevicePath);
./Library/BdsDxe/BdsEntry.c:    if (StrCmp(gSettings.DefaultBoot, BootOption->Description) == 0) 
./Library/BdsDxe/BdsEntry.c:      Status = BdsLibBootViaBootOption (BootOption, BootOption->LoadOptions, BootOption->DevicePath, &ExitDataSize, &ExitData);
./Library/BdsDxe/BdsEntry.c://      BootOption->StatusString = GetStringById (STRING_TOKEN (STR_BOOT_FAILED));
./Library/BdsDxe/BdsEntry.c:      BootOption->StatusString = GetStringById (STRING_TOKEN (STR_BOOT_SUCCEEDED));
./Library/BdsDxe/GenericBds/BdsBoot.2.c:  if ((OptionToCheck->BootCurrent == BootOption->BootCurrent) &&
./Library/BdsDxe/GenericBds/BdsBoot.2.c:      (CompareMem (OptionToCheck->DevicePath, BootOption->DevicePath, GetDevicePathSize (OptionToCheck->DevicePath)) == 0))
./Library/BdsDxe/GenericBds/BdsBoot.2.c:    BdsLibConnectDevicePath (BootOption->DevicePath);
./Library/BdsDxe/GenericBds/BdsBoot.2.c:    BdsLibBootViaBootOption (BootOption, BootOption->LoadOptions, BootOption->DevicePath, &ExitDataSize, &ExitData);
./Library/BdsDxe/GenericBds/BdsBoot.c:  if ((OptionToCheck->BootCurrent == BootOption->BootCurrent) &&
./Library/BdsDxe/GenericBds/BdsBoot.c:      (CompareMem (OptionToCheck->DevicePath, BootOption->DevicePath, GetDevicePathSize (OptionToCheck->DevicePath)) == 0))
./Library/BdsDxe/GenericBds/BdsBoot.c:    BdsLibConnectDevicePath (BootOption->DevicePath);
./Library/BdsDxe/GenericBds/BdsBoot.c:    BdsLibBootViaBootOption (BootOption, BootOption->LoadOptions, BootOption->DevicePath, &ExitDataSize, &ExitData);
./Library/BdsDxe/Hotkey.c:    BdsLibConnectDevicePath (mHotkeyBootOption->DevicePath);
./Library/BdsDxe/Hotkey.c:    Status = BdsLibBootViaBootOption (mHotkeyBootOption, mHotkeyBootOption->LoadOptions, mHotkeyBootOption->DevicePath, &ExitDataSize, &ExitData);
./Library/BdsDxe/Hotkey.c:      mHotkeyBootOption->StatusString = GetStringById (STRING_TOKEN (STR_BOOT_FAILED));
./Library/BdsDxe/Hotkey.c:      mHotkeyBootOption->StatusString = GetStringById (STRING_TOKEN (STR_BOOT_SUCCEEDED));
./Library/BdsDxe/Hotkey.c:    FreePool (mHotkeyBootOption->Description);
./Library/BdsDxe/Hotkey.c:    FreePool (mHotkeyBootOption->DevicePath);
./Library/BdsDxe/Hotkey.c:    FreePool (mHotkeyBootOption->LoadOptions);
