## @file
# This is bareBoot FDF file
#

################################################################################
#
# FV Section
#
# [FV] section is used to define what components or modules are placed within a flash
# device file.  This section also defines order the components and modules are positioned
# within the image.  The [FV] section consists of define statements, set statements and
# module statements.
#
################################################################################
[FV.bareBootEfiMainFv]
BlockSize          = 0x10000
NumBlocks          = 0x40
FvAlignment        = 16         #FV alignment and FV attributes setting.
ERASE_POLARITY     = 1
MEMORY_MAPPED      = TRUE
STICKY_WRITE       = TRUE
LOCK_CAP           = TRUE
LOCK_STATUS        = TRUE
WRITE_DISABLED_CAP = TRUE
WRITE_ENABLED_CAP  = TRUE
WRITE_STATUS       = TRUE
WRITE_LOCK_CAP     = TRUE
WRITE_LOCK_STATUS  = TRUE
READ_DISABLED_CAP  = TRUE
READ_ENABLED_CAP   = TRUE
READ_STATUS        = TRUE
READ_LOCK_CAP      = TRUE
READ_LOCK_STATUS   = TRUE

APRIORI DXE {
  INF  MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
  INF  PcAtChipsetPkg/8259InterruptControllerDxe/8259.inf
}

INF  MdeModulePkg/Universal/PCD/Dxe/Pcd.inf
INF  MdeModulePkg/Universal/WatchdogTimerDxe/WatchdogTimer.inf
INF  MdeModulePkg/Core/RuntimeDxe/RuntimeDxe.inf
INF  MdeModulePkg/Universal/MonotonicCounterRuntimeDxe/MonotonicCounterRuntimeDxe.inf

INF  MdeModulePkg/Universal/Variable/EmuRuntimeDxe/EmuVariableRuntimeDxe.inf
INF  MdeModulePkg/Universal/CapsuleRuntimeDxe/CapsuleRuntimeDxe.inf
#INF  MdeModulePkg/Universal/MemoryTest/NullMemoryTestDxe/NullMemoryTestDxe.inf
INF  MdeModulePkg/Universal/SecurityStubDxe/SecurityStubDxe.inf
INF  MdeModulePkg/Universal/Console/ConPlatformDxe/ConPlatformDxe.inf
INF  MdeModulePkg/Universal/Console/ConSplitterDxe/ConSplitterDxe.inf
INF  MdeModulePkg/Universal/HiiDatabaseDxe/HiiDatabaseDxe.inf
INF  MdeModulePkg/Universal/SetupBrowserDxe/SetupBrowserDxe.inf
INF  MdeModulePkg/Universal/DisplayEngineDxe/DisplayEngineDxe.inf

INF  bareBoot/GraphicsConsoleDxe/GraphicsConsoleDxe.inf
INF  MdeModulePkg/Universal/SmbiosDxe/SmbiosDxe.inf
!ifdef DUETSTUFF
INF  DuetPkg/SmbiosGenDxe/SmbiosGen.inf
!else
INF  bareBoot/SmbiosGenDxe/SmbiosGen.inf
!endif

INF  bareBoot/Library/BdsDxe/BdsDxe.inf

#INF  MdeModulePkg/Universal/DevicePathDxe/DevicePathDxe.inf
INF  UefiCpuPkg/CpuIo2Dxe/CpuIo2Dxe.inf
!ifdef EDK2CPUDXE
INF  UefiCpuPkg/CpuDxe/CpuDxe.inf
!else
INF  bareBoot/Cpu/CpuDxe/Cpu.inf
!endif
INF  bareBoot/AcpiResetDxe/Reset.inf
INF  MdeModulePkg/Universal/Metronome/Metronome.inf

INF  PcAtChipsetPkg/8259InterruptControllerDxe/8259.inf
INF  PcAtChipsetPkg/8254TimerDxe/8254Timer.inf
INF  PcAtChipsetPkg/PcatRealTimeClockRuntimeDxe/PcatRealTimeClockRuntimeDxe.inf
INF  bareBoot/LegacyRegion2Dxe/LegacyRegion2Dxe.inf
!ifdef DUETSTUFF
INF  DuetPkg/PciRootBridgeNoEnumerationDxe/PciRootBridgeNoEnumeration.inf
INF  DuetPkg/PciBusNoEnumerationDxe/PciBusNoEnumeration.inf
!else
INF  bareBoot/PciRootBridgeNoEnumerationDxe/PciRootBridgeNoEnumeration.inf
INF  bareBoot/PciBusNoEnumerationDxe/PciBusNoEnumeration.inf
!endif

  # IDE/AHCI Support
#INF  IntelFrameworkModulePkg/Csm/BiosThunk/BlockIoDxe/BlockIoDxe.inf
!ifdef BLOCKIO
INF  bareBoot/BlockIoDxe/BlockIoDxe.inf
!else
INF  MdeModulePkg/Bus/Pci/SataControllerDxe/SataControllerDxe.inf
INF  MdeModulePkg/Bus/Ata/AtaAtapiPassThru/AtaAtapiPassThru.inf
INF  MdeModulePkg/Bus/Ata/AtaBusDxe/AtaBusDxe.inf
INF  MdeModulePkg/Bus/Scsi/ScsiBusDxe/ScsiBusDxe.inf
INF  MdeModulePkg/Bus/Scsi/ScsiDiskDxe/ScsiDiskDxe.inf
!endif

  # Usb Support
!ifdef SPEEDUP
INF  bareBoot/MdeModulePkg/Bus/Pci/UhciDxe/UhciDxe.inf
INF  bareBoot/MdeModulePkg/Bus/Pci/EhciDxe/EhciDxe.inf
INF  bareBoot/MdeModulePkg/Bus/Pci/XhciDxe/XhciDxe.inf
INF  bareBoot/MdeModulePkg/Bus/Usb/UsbBusDxe/UsbBusDxe.inf
INF  bareBoot/MdeModulePkg/Bus/Usb/UsbKbDxe/UsbKbDxe.inf
INF  bareBoot/MdeModulePkg/Bus/Usb/UsbMassStorageDxe/UsbMassStorageDxe.inf
!else
!ifndef NO_OHCI
INF  QuarkSocPkg/QuarkSouthCluster/Usb/Ohci/Dxe/OhciDxe.inf
!endif
!ifndef NO_UHCI
INF  MdeModulePkg/Bus/Pci/UhciDxe/UhciDxe.inf
!endif
INF  MdeModulePkg/Bus/Pci/EhciDxe/EhciDxe.inf
!ifndef NO_XHCI
INF  MdeModulePkg/Bus/Pci/XhciDxe/XhciDxe.inf
!endif
INF  MdeModulePkg/Bus/Usb/UsbBusDxe/UsbBusDxe.inf
INF  MdeModulePkg/Bus/Usb/UsbKbDxe/UsbKbDxe.inf
INF  MdeModulePkg/Bus/Usb/UsbMassStorageDxe/UsbMassStorageDxe.inf
!endif

!ifndef NO_ISA
# ISA Support
INF  PcAtChipsetPkg/IsaAcpiDxe/IsaAcpi.inf
INF  IntelFrameworkModulePkg/Bus/Isa/IsaBusDxe/IsaBusDxe.inf
!ifdef PS2
INF  IntelFrameworkModulePkg/Bus/Isa/Ps2KeyboardDxe/Ps2keyboardDxe.inf
!endif
!endif

!ifndef NO_BIOSKBD
INF  bareBoot/BiosKeyboard/KeyboardDxe.inf
!endif

INF  MdeModulePkg/Universal/Disk/DiskIoDxe/DiskIoDxe.inf
INF  MdeModulePkg/Universal/Disk/UnicodeCollation/EnglishDxe/EnglishDxe.inf
!ifdef EDK2PART
INF  MdeModulePkg/Universal/Disk/PartitionDxe/PartitionDxe.inf
!else
INF  bareBoot/PartitionDxe/PartitionDxe.inf
!endif

INF  bareBoot/BiosVideoThunkDxe/BiosVideo.inf

#INF  MdeModulePkg/Universal/Acpi/AcpiTableDxe/AcpiTableDxe.inf
#INF  MdeModulePkg/Universal/Acpi/AcpiPlatformDxe/AcpiPlatformDxe.inf
#INF  bareBoot/OsxAcpiTableDxe/AcpiTableDxe.inf
#INF  bareBoot/OsxAcpiPlatformDxe/AcpiPlatformDxe.inf

INF  IntelFrameworkModulePkg/Universal/DataHubDxe/DataHubDxe.inf

INF  RuleOverride=BINARY FatBinPkg/EnhancedFatDxe/Fat.inf
!ifdef VBOXHFS
INF  bareBoot/VBoxFsDxe/VBoxHfs.inf
!else
INF  RuleOverride=BINARY bareBoot/HFSPlus/HFSPlus.inf
!endif
#INF  RuleOverride=BINARY bareBoot/XhciDxe/XhciDxe.inf

!ifdef ION
  # Binary INF file to support toggle among different CPU architectures.
INF  RuleOverride=BINARY bareBoot/ION/IONDxe.inf
!endif

!ifndef NO_LOGO
FILE FREEFORM = PCD(gEfiBareBootPkgGuid.PcdAppleGrayLogoFile) {
    SECTION RAW = bareBoot/Logo/appleLogo_apple_gray.png
  }

FILE FREEFORM = PCD(gEfiBareBootPkgGuid.PcdAppleWhiteLogoFile) {
    SECTION RAW = bareBoot/Logo/appleLogo_apple_white.png
  }

FILE FREEFORM = PCD(gEfiBareBootPkgGuid.PcdBBLogoFile) {
    SECTION RAW = bareBoot/Logo/Logo.bmp
  }
!endif

!ifndef NO_FONT
FILE FREEFORM = PCD(gEfiBareBootPkgGuid.PcdFontsFile) {
    SECTION RAW = bareBoot/Fonts/Monaco16.png
  }
!endif

[Rule.Common.DXE_CORE]
  FILE DXE_CORE = $(NAMED_GUID) {
      PE32     PE32           $(INF_OUTPUT)/$(MODULE_NAME).efi
  }

[Rule.Common.UEFI_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
  }

[Rule.Common.DXE_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
  }

[Rule.Common.DXE_RUNTIME_DRIVER]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      $(INF_OUTPUT)/$(MODULE_NAME).depex
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
  }

[Rule.Common.UEFI_APPLICATION]
  FILE APPLICATION = $(NAMED_GUID) {
        PE32     PE32                    $(INF_OUTPUT)/$(MODULE_NAME).efi
  }

[Rule.Common.UEFI_DRIVER.BINARY]
  FILE DRIVER = $(NAMED_GUID) {
    DXE_DEPEX    DXE_DEPEX Optional      |.depex
        PE32     PE32                    |.efi
  }
