

;
; +-------------------------------------------------------------------------+
; |	This file is generated by The Interactive Disassembler (IDA)	    |
; |	Copyright (c) 2007 by DataRescue sa/nv,	<ida@datarescue.com>	    |
; | Licensed to: Mach EDV Dienstleistungen, Jan	Mach, 1	user, adv, 11/2007  |
; +-------------------------------------------------------------------------+
;
; Input	MD5   :	CC78918532D714AB7BC1E201C8B6C73A

; File Name   :	/Users/sunny/src/edk2/bareBoot/BootSector/bin/St_gpt_iT.com
; Format      :	MS-DOS COM-file
; Base Address:	1000h Range: 10100h-11100h Loaded length: 1000h

		.686p
		.mmx
		.model tiny

; ===========================================================================

; Segment type:	Pure code
seg000		segment	byte public 'CODE' use16
		assume cs:seg000
		org 100h
		assume es:nothing, ss:nothing, ds:seg000, fs:nothing, gs:nothing

; =============== S U B	R O U T	I N E =======================================

; Attributes: noreturn

		public start
start		proc near
		jmp	short loc_10103
; ---------------------------------------------------------------------------
		db 90h
; ---------------------------------------------------------------------------

loc_10103:				; CODE XREF: startj
		mov	bp, 7C00h
		mov	ax, 1900h
		mov	es, ax
		assume es:nothing
		mov	ax, [bp+43h]
		mov	es:0, ax
		mov	ax, [bp+45h]
		mov	es:2, ax
		xor	di, di
		mov	ax, 2000h
		mov	es, ax
		assume es:nothing
		call	sub_1016B
		mov	ax, cs
		mov	cs:69h,	ax
		pusha
		mov	cx, 40FFh

loc_1012D:				; CODE XREF: start+3Ej	start+45j ...
		inc	cx
		mov	ax, 1F00h
		mov	es, ax
		assume es:nothing
		mov	ax, 4F01h
		mov	di, 0
		int	10h		; - VIDEO - VESA SuperVGA BIOS -  GET SuperVGA MODE INFORMATION
					; CX = SuperVGA	video mode, ES:DI -> 256-byte buffer mode information
					; CX = SuperVGA	video mode
					; ES:DI	-> 256-byte buffer mode	information
		cmp	ax, 4Fh
		jnz	short loc_1012D
		mov	ax, es:[di]
		test	al, 80h
		jz	short loc_1012D
		cmp	word ptr es:[di+12h], 320h
		jl	short loc_1012D
		cmp	word ptr es:[di+14h], 258h
		jl	short loc_1012D
		cmp	byte ptr es:[di+19h], 20h
		jl	short loc_1012D
		mov	ax, 4F02h
		mov	bx, cx
		int	10h		; - VIDEO - VESA SuperVGA BIOS -  SET SuperVGA VIDEO MODE
					; BX = mode, bit 15 set	means don't clear video memory
					; BX = bit 15 set means	don't clear video memory
					; Return: AL = 4Fh function supported
					; AH = 00h successful, 01h failed
		popa
		jmp	far ptr	2000h:200h
start		endp


; =============== S U B	R O U T	I N E =======================================


sub_1016B	proc near		; CODE XREF: start+20p
		pusha
		mov	si, 1
		push	cx
		mov	dx, 0FFFh

loc_10173:				; CODE XREF: sub_1016B+42j
					; sub_1016B+64j
		mov	ax, cx
		and	ax, 0FFF8h
		cmp	ax, 0FFF8h
		jz	short loc_101D1
		mov	ax, cx
		shl	ax, 2
		push	si
		mov	si, ax
		shr	ax, 9
		add	ax, [bp+0Eh]
		and	si, 1FFh
		cmp	ax, dx
		jz	short loc_1019F
		mov	bx, 2
		push	es
		push	ds
		pop	es
		assume es:seg000
		call	sub_101D4
		pop	es
		assume es:nothing
		mov	dx, ax

loc_1019F:				; CODE XREF: sub_1016B+26j
		mov	bx, [si]
		mov	ax, cx
		pop	si
		dec	bx
		cmp	bx, cx
		jnz	short loc_101AF
		inc	bx
		inc	si
		mov	cx, bx
		jmp	short loc_10173
; ---------------------------------------------------------------------------

loc_101AF:				; CODE XREF: sub_1016B+3Cj
		inc	bx
		pop	ax
		push	bx
		mov	cx, bx
		sub	ax, 2
		xor	bh, bh

loc_101B9:				; DATA XREF: sub_101D4+C2o
					; sub_101D4+D2o
		mov	bl, [bp+0Dh]
		mul	bx
		add	ax, [bp+0]

loc_101C1:				; DATA XREF: sub_101D4+CBo
		push	ax
		mov	ax, si
		mul	bx
		mov	bx, ax
		pop	ax
		call	sub_101D4
		mov	si, 1
		jmp	short loc_10173
; ---------------------------------------------------------------------------

loc_101D1:				; CODE XREF: sub_1016B+10j
		pop	cx
		popa
		retn
sub_1016B	endp


; =============== S U B	R O U T	I N E =======================================


sub_101D4	proc near		; CODE XREF: sub_1016B+2Ep
					; sub_1016B+5Ep

; FUNCTION CHUNK AT 0286 SIZE 00000033 BYTES

		pushad
		push	ds
		xor	cx, cx
		mov	ds, cx
		assume ds:nothing
		mov	bp, 7C00h
		add	eax, [bp+1FAh]
		mov	cx, bx

loc_101E5:				; CODE XREF: sub_101D4+7Dj
		mov	bx, cx
		cmp	bx, 7Fh
		jle	short loc_101EF
		mov	bx, 7Fh

loc_101EF:				; CODE XREF: sub_101D4+16j
		push	ax
		mov	ax, es
		shr	ax, 5
		and	ax, 7Fh
		add	ax, bx
		cmp	ax, 80h
		jle	short loc_10204
		sub	ax, 80h
		sub	bx, ax

loc_10204:				; CODE XREF: sub_101D4+29j
		pop	ax
		push	bx
		push	cx
		mov	bp, 600h
		lea	si, [bp+1B6h]
		mov	dl, [si]
		mov	bp, 7C00h
		lea	si, [bp+1EAh]
		mov	[si+2],	bl
		mov	[si+4],	di
		mov	word ptr [si+6], es
		mov	[si+8],	eax
		mov	dword ptr [si+0Ch], 0
		mov	ah, 42h
		int	13h		; DISK -
		jb	short loc_10286
		mov	eax, [si+8]
		pop	cx
		pop	bx
		movzx	ebx, bx
		add	eax, ebx
		sub	cx, bx
		push	ax
		xor	ax, ax
		mov	ax, es
		shl	bx, 5
		add	ax, bx
		mov	es, ax
		pop	ax
		cmp	cx, 0
		jnz	short loc_101E5
		pop	ds
		assume ds:seg000
		popad
		retn
sub_101D4	endp


; =============== S U B	R O U T	I N E =======================================


sub_10257	proc near		; CODE XREF: sub_101D4+C6p
					; sub_101D4+CFp
		pusha
		mov	bl, 0Ah
		mov	ah, 0
		div	bl
		cmp	al, 0Ah
		jb	short loc_10276
		mov	dx, ax
		mov	ah, 0
		div	bl
		add	al, 30h
		add	ah, 30h
		mov	[si], al
		mov	[si+2],	ah
		mov	ax, dx
		jmp	short loc_1027E
; ---------------------------------------------------------------------------

loc_10276:				; CODE XREF: sub_10257+9j
		mov	byte ptr [si], 20h
		add	al, 30h
		mov	[si+2],	al

loc_1027E:				; CODE XREF: sub_10257+1Dj
		add	ah, 30h
		mov	[si+4],	ah
		popa
		retn
sub_10257	endp

; ---------------------------------------------------------------------------
; START	OF FUNCTION CHUNK FOR sub_101D4

loc_10286:				; CODE XREF: sub_101D4+5Cj
					; sub_101D4+E3j
		push	cs
		pop	ds
		xor	al, al
		mov	bp, 7C00h
		lea	si, [bp+1EAh]
		mov	bx, [si+6]
		mov	al, bl
		lea	si, loc_101B9
		call	sub_10257
		mov	al, bh
		lea	si, loc_101C1
		call	sub_10257
		lea	si, loc_101B9
		mov	cx, 0Ch
		mov	ax, 0B800h
		mov	es, ax
		assume es:nothing
		mov	di, 0A0h
		rep movsw
		jmp	short loc_10286
; END OF FUNCTION CHUNK	FOR sub_101D4
; ---------------------------------------------------------------------------
		db 45h,	0Ch, 72h, 0Ch, 72h, 0Ch, 20h, 0Ch, 45h,	0Ch, 72h
		db 0Ch,	72h, 0Ch, 20h, 0Ch, 35h	dup(0),	55h, 0AAh, 0EBh
		db 24h,	45h, 0Ch, 6Dh, 0Ch, 36h, 0Ch, 34h, 0Ch,	54h, 0Ch
		db 20h,	0Ch, 55h, 0Ch, 6Eh, 0Ch, 73h, 0Ch, 75h,	0Ch, 70h
		db 0Ch,	70h, 0Ch, 6Fh, 0Ch, 72h, 0Ch, 74h, 0Ch,	65h, 0Ch
		db 64h,	0Ch, 21h, 0Ch, 8Ch, 0C8h, 8Eh, 0D8h, 8Eh, 0C0h
		db 8Eh,	0D0h, 0BCh, 0E0h, 0Fh, 66h, 0BBh, 4 dup(0), 66h
		db 8Dh,	3Eh, 5Ah, 0Bh, 66h, 0B8h, 20h, 0E8h, 2 dup(0)
		db 66h,	0B9h, 14h, 3 dup(0), 66h, 0BAh,	50h, 41h, 4Dh
		db 53h,	0CDh, 15h, 72h,	0Ch, 66h, 83h, 0C7h, 14h, 66h
		db 83h,	0FBh, 0, 74h, 2, 0EBh, 0DEh, 66h, 8Dh, 6, 5Ah
		db 0Bh,	66h, 2Bh, 0F8h,	66h, 89h, 3Eh, 56h, 0Bh, 66h, 33h
		db 0DBh, 8Ch, 0CBh, 66h, 0C1h, 0E3h, 4,	67h, 66h, 8Dh
		db 83h,	74h, 3,	2 dup(0), 66h, 0A3h, 70h, 3, 67h, 66h
		db 8Dh,	83h, 0C6h, 3, 2	dup(0),	66h, 0A3h, 0BEh, 3, 67h
		db 66h,	8Dh, 93h, 56h, 0Bh, 2 dup(0), 0B8h, 1, 24h, 0CDh
		db 15h,	73h, 1Eh, 0E8h,	0C3h, 0, 75h, 19h, 0E7h, 0EDh
		db 0B0h, 0D1h, 0E6h, 64h, 0E8h,	0B8h, 0, 75h, 0Eh, 0B0h
		db 0DFh, 0E6h, 60h, 0E8h, 0AFh,	0, 0B9h, 19h, 0, 0E7h
		db 0EDh, 0E2h, 0FCh, 0FAh, 66h,	8Dh, 6,	0EAh, 2, 66h, 5
		db 6, 0, 2, 0, 66h, 0A3h, 0EAh,	2, 66h,	8Dh, 6,	28h, 3
		db 66h,	5, 6, 0, 2, 0, 66h, 0A3h, 28h, 3, 66h, 0Fh, 1
		db 16h,	6Eh, 3,	0Fh, 20h, 0C0h,	66h, 83h, 0C8h,	1, 0Fh
		db 22h,	0C0h, 66h, 0EAh, 4 dup(0), 10h,	0, 66h,	0B8h, 8
		db 0, 8Eh, 0D8h, 8Eh, 0C0h, 8Eh, 0D0h, 0Fh, 20h, 0E0h
		db 66h,	0Fh, 0BAh, 0E8h, 5, 0Fh, 22h, 0E0h, 0B8h, 2 dup(0)
		db 9, 0, 0Fh, 22h, 0D8h, 0B9h, 80h, 2 dup(0), 0C0h, 0Fh
		db 32h,	0Fh, 0BAh, 0E8h, 8, 0Fh, 30h, 0Fh, 20h,	0C0h, 0Fh
		db 0BAh, 0E8h, 1Fh, 0Fh, 22h, 0C0h, 0EBh, 0, 67h, 0EAh
		db 4 dup(0), 38h, 0, 66h, 0B8h,	30h, 0,	8Eh, 0D8h, 66h
		db 0B8h, 18h, 0, 8Eh, 0C0h, 8Eh, 0D0h, 8Eh, 0D8h, 0BDh
		db 2 dup(0), 40h, 0, 0BBh, 2 dup(0), 7,	0, 48h,	33h, 0C0h
		db 66h,	0B8h, 0BCh, 3, 48h, 5, 2 dup(0), 2, 0, 0Fh, 1
		db 18h,	48h, 0C7h, 0C0h, 0, 10h, 2, 0, 50h, 0C3h, 0B9h
		db 2 dup(0), 0E7h, 0EDh, 0E4h, 64h, 24h, 2, 0E0h, 0F8h
		db 0C3h, 90h, 47h, 0Dh dup(0), 2 dup(0FFh), 3 dup(0), 92h
		db 0CFh, 0, 2 dup(0FFh), 3 dup(0), 9Ah,	0CFh, 0, 2 dup(0FFh)
		db 3 dup(0), 92h, 0CFh,	0, 2 dup(0FFh),	3 dup(0), 9Ah
		db 0CFh, 9 dup(0), 2 dup(0FFh),	3 dup(0), 92h, 0CFh, 0
		db 2 dup(0FFh),	3 dup(0), 9Ah, 0AFh, 9 dup(0), 8Fh, 7
		db 0Ah dup(0), 38h, 2 dup(0), 8Eh, 0Ch dup(0), 38h, 2 dup(0)
		db 8Eh,	0Ch dup(0), 38h, 2 dup(0), 8Eh,	0Ch dup(0), 38h
		db 2 dup(0), 8Eh, 0Ch dup(0), 38h, 2 dup(0), 8Eh, 0Ch dup(0)
		db 38h,	2 dup(0), 8Eh, 0Ch dup(0), 38h,	2 dup(0), 8Eh
		db 0Ch dup(0), 38h, 2 dup(0), 8Eh, 0Ch dup(0), 38h, 2 dup(0)
		db 8Eh,	0Ch dup(0), 38h, 2 dup(0), 8Eh,	0Ch dup(0), 38h
		db 2 dup(0), 8Eh, 0Ch dup(0), 38h, 2 dup(0), 8Eh, 0Ch dup(0)
		db 38h,	2 dup(0), 8Eh, 0Ch dup(0), 38h,	2 dup(0), 8Eh
		db 0Ch dup(0), 38h, 2 dup(0), 8Eh, 0Ch dup(0), 38h, 2 dup(0)
		db 8Eh,	0Ch dup(0), 38h, 2 dup(0), 8Eh,	0Ch dup(0), 38h
		db 2 dup(0), 8Eh, 0Ch dup(0), 38h, 2 dup(0), 8Eh, 0Ch dup(0)
		db 38h,	2 dup(0), 8Eh, 55Ch dup(0), 38h, 2 dup(0), 8Eh
		db 0Ch dup(0), 38h, 2 dup(0), 8Eh, 0Ch dup(0), 38h, 2 dup(0)
		db 8Eh,	0Ch dup(0), 38h, 2 dup(0), 8Eh,	0Ch dup(0), 38h
		db 2 dup(0), 8Eh, 0Ch dup(0), 38h, 2 dup(0), 8Eh, 0Ch dup(0)
		db 38h,	2 dup(0), 8Eh, 0Ch dup(0), 38h,	2 dup(0), 8Eh
		db 0Ch dup(0), 38h
		db 2 dup(0), 8Eh, 0Ch dup(0), 38h, 2 dup(0), 8Eh, 0Ch dup(0)
		db 38h,	2 dup(0), 8Eh, 0Ch dup(0), 38h,	2 dup(0), 8Eh
		db 0Ch dup(0), 38h, 2 dup(0), 8Eh, 0Ch dup(0), 38h, 2 dup(0)
		db 8Eh,	0Ch dup(0), 38h, 2 dup(0), 8Eh,	0Ch dup(0), 38h
		db 2 dup(0), 8Eh, 494h dup(0), 0CDh, 8,	0CFh, 0CDh, 9
		db 0CFh, 0CDh, 0Ah, 0CFh, 0CDh,	0Bh, 0CFh, 0CDh, 0Ch, 0CFh
		db 0CDh, 0Dh, 0CFh, 0CDh, 0Eh, 0CFh, 0CDh, 0Fh,	0CFh, 6	dup(0)
		db 55h,	0AAh
seg000		ends


		end start
