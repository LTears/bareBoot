Index: DuetPkg/DxeIpl/Debug.c
===================================================================
--- DuetPkg/DxeIpl/Debug.c	(revision 1)
+++ DuetPkg/DxeIpl/Debug.c	(working copy)
@@ -23,7 +23,7 @@
 #include "SerialStatusCode.h"
 #include "Debug.h"
 
-UINT8 *mCursor;
+UINT8 *mCursor = (UINT8 *)(UINTN)(0x000b8000 + 160);
 UINT8 mHeaderIndex = 10;
 
 
@@ -32,8 +32,10 @@
   CHAR8 Char
   )
 {
+#if (DEBUG_PRINT_LEVEL & 0x7FFFFFFF)
   *(UINT8 *)(UINTN)(0x000b8000 + mHeaderIndex) = Char;
   mHeaderIndex += 2;
+#endif
 }
 
 VOID
@@ -52,11 +54,13 @@
 }
 
 VOID
+EFIAPI
 PrintString (
   IN CONST CHAR8  *FormatString,
   ...
   )
 {
+#if (DEBUG_PRINT_LEVEL & 0x7FFFFFFF)
   UINTN           Index;
   CHAR8           PrintBuffer[1000];
   VA_LIST         Marker;
@@ -68,7 +72,7 @@
   for (Index = 0; PrintBuffer[Index] != 0; Index++) {
     if (PrintBuffer[Index] == '\n') {
       mCursor = (UINT8 *) (UINTN) (0xb8000 + (((((UINTN)mCursor - 0xb8000) + 160) / 160) * 160));
-    } else {
+    } else if (PrintBuffer[Index] != '\r') { // skip non-displayable character
       *mCursor = (UINT8) PrintBuffer[Index];
       mCursor += 2;
     }
@@ -78,5 +82,6 @@
   // All information also output to serial port.
   //
   SerialPortWrite ((UINT8 *) PrintBuffer, Index);
+#endif
 }
 
Index: DuetPkg/DxeIpl/Debug.h
===================================================================
--- DuetPkg/DxeIpl/Debug.h	(revision 1)
+++ DuetPkg/DxeIpl/Debug.h	(working copy)
@@ -27,6 +27,7 @@
   );
 
 VOID
+EFIAPI
 PrintString (
   IN CONST CHAR8  *FormatString,
   ...
Index: DuetPkg/EfiLdr/Debug.c
===================================================================
--- DuetPkg/EfiLdr/Debug.c	(revision 1)
+++ DuetPkg/EfiLdr/Debug.c	(working copy)
@@ -20,7 +20,7 @@
 #include "EfiLdr.h"
 #include "Debug.h"
 
-UINT8 *mCursor;
+UINT8 *mCursor = (UINT8 *)(UINTN)(0x000b8000 + 160);
 UINT8 mHeaderIndex = 10;
 
 
@@ -29,8 +29,10 @@
   CHAR8 Char
   )
 {
+#if (DEBUG_PRINT_LEVEL & 0x7FFFFFFF)
   *(UINT8 *)(UINTN)(0x000b8000 + mHeaderIndex) = Char;
   mHeaderIndex += 2;
+#endif
 }
 
 VOID
@@ -49,13 +51,15 @@
 }
 
 VOID
+EFIAPI
 PrintString (
   IN CONST CHAR8  *FormatString,
   ...
   )
 {
+#if (DEBUG_PRINT_LEVEL & 0x7FFFFFFF)
   UINTN           Index;
-  CHAR8           PrintBuffer[256];
+  CHAR8           PrintBuffer[1000];
   VA_LIST         Marker;
 
   VA_START (Marker, FormatString);
@@ -65,7 +69,7 @@
   for (Index = 0; PrintBuffer[Index] != 0; Index++) {
     if (PrintBuffer[Index] == '\n') {
       mCursor = (UINT8 *) (UINTN) (0xb8000 + (((((UINTN)mCursor - 0xb8000) + 160) / 160) * 160));
-    } else {
+    } else if (PrintBuffer[Index] != '\r') { // skip non-displayable character
       *mCursor = (UINT8) PrintBuffer[Index];
       mCursor += 2;
     }
@@ -75,5 +79,6 @@
   // All information also output to serial port.
   //
   SerialPortWrite ((UINT8 *) PrintBuffer, Index);
+#endif
 }
 
Index: DuetPkg/EfiLdr/Debug.h
===================================================================
--- DuetPkg/EfiLdr/Debug.h	(revision 1)
+++ DuetPkg/EfiLdr/Debug.h	(working copy)
@@ -27,6 +27,7 @@
   );
 
 VOID
+EFIAPI
 PrintString (
   IN CONST CHAR8  *FormatString,
   ...
